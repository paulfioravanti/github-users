{"version":3,"sources":["User.tsx","Users.tsx","App.tsx","index.tsx"],"names":["GITHUB_URL","User","user","login","avatarUrl","profileUrl","className","alt","src","href","process","GET_USERS","gql","Users","useQuery","loading","error","data","users","map","renderUser","props","key","id","App","client","ApolloClient","cache","InMemoryCache","uri","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAYIA,E,+EAQG,SAASC,EAAT,GAAmE,IAAD,IAAlDC,KAAQC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,UAC9BC,EAAU,UAAML,GAAN,OAAmBG,GAEnC,OACE,yBAAKG,UAAU,QACb,6BACE,yBAAKC,IAAI,SAASD,UAAU,eAAeE,IAAKJ,IAChD,wBAAIE,UAAU,cACXH,IAGL,uBAAGM,KAAMJ,EAAYC,UAAU,cAA/B,gB,6IAhBJN,EAAaU,sBCGf,IAAMC,E,MAA0BC,GAAH,KAUtB,SAASC,IAAsB,IAAD,EACMC,mBAAmBH,GAApDI,EAD2B,EAC3BA,QAASC,EADkB,EAClBA,MAAOC,EADW,EACXA,KAExB,GAAIF,EACF,OAAO,0CAGT,GAAIC,EACF,OAAO,qDAGT,IAAKC,EACH,OAAO,iDAGT,IAAMC,EAAQD,EAAKC,MAAMC,IAAIC,GAE7B,OACE,oCACGF,GAKP,SAASE,EAAWC,GAClB,OAAO,kBAACpB,EAAD,CAAMqB,IAAKD,EAAME,GAAIrB,KAAMmB,ICjD7B,SAASG,IACd,OACE,0BAAMlB,UAAU,OACd,8CACA,kBAACO,EAAD,OCGN,IAAMY,EAAS,IAAIC,eAAa,CAC9BC,MAAO,IAAIC,gBACXC,IAAKnB,8CAGPoB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,iBAAD,CAAgBP,OAAQA,GACtB,kBAAC,EAAD,QAGJQ,SAASC,eAAe,W","file":"static/js/main.e846d5a6.chunk.js","sourcesContent":["import React from \"react\"\n\nexport type UserProps = {\n  id: string,\n  login: string,\n  avatarUrl: string\n}\n\ntype Props = {\n  user: UserProps\n}\n\nlet GITHUB_URL: string\n\nif (process.env.REACT_APP_GITHUB_URL) {\n  GITHUB_URL = process.env.REACT_APP_GITHUB_URL\n} else {\n  throw new Error(\"REACT_APP_GITHUB_URL needs to be set!\")\n}\n\nexport function User({ user: { login, avatarUrl } }: Props): JSX.Element {\n  const profileUrl = `${GITHUB_URL}${login}`\n\n  return (\n    <div className=\"Card\">\n      <div>\n        <img alt=\"avatar\" className=\"Card--avatar\" src={avatarUrl} />\n        <h1 className=\"Card--name\">\n          {login}\n        </h1>\n      </div>\n      <a href={profileUrl} className=\"Card--link\">\n        See profile\n      </a>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { useQuery } from \"@apollo/react-hooks\"\nimport { ApolloError } from \"@apollo/client\"\nimport gql from \"graphql-tag\"\nimport { DocumentNode } from \"graphql\"\nimport { User, UserProps } from \"./User\"\nimport { Maybe } from \"./Utils\"\n\ntype UserData = {\n  users: UserProps[]\n}\n\ntype Result = {\n  loading: boolean,\n  error?: Maybe<ApolloError>,\n  data: Maybe<UserData>\n}\n\nconst GET_USERS: DocumentNode = gql`\n  {\n    users {\n      id\n      login\n      avatarUrl\n    }\n  }\n`\n\nexport function Users(): JSX.Element {\n  const { loading, error, data }: Result = useQuery<UserData>(GET_USERS)\n\n  if (loading) {\n    return <h1>Loading...</h1>\n  }\n\n  if (error) {\n    return <h1>Something went wrong!</h1>\n  }\n\n  if (!data) {\n    return <h1>No data returned!</h1>\n  }\n\n  const users = data.users.map(renderUser)\n\n  return (\n    <>\n      {users}\n    </>\n  )\n}\n\nfunction renderUser(props: UserProps): JSX.Element {\n  return <User key={props.id} user={props} />\n}\n","import React from \"react\"\nimport \"./App.css\"\nimport { Users } from \"./Users\"\n\nexport function App(): JSX.Element {\n  return (\n    <main className=\"App\">\n      <h1>Github | Users</h1>\n      <Users />\n    </main>\n  )\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport {\n  ApolloClient,\n  InMemoryCache\n} from \"@apollo/client\"\nimport { ApolloProvider } from \"@apollo/react-hooks\"\n\nimport \"./index.css\"\nimport { App } from \"./App\"\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  uri: process.env.REACT_APP_APOLLO_SERVER_URL\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}